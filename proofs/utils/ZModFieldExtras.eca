require import AllCore IntDiv ZModP.
require import Distr DInterval.

clone include ZModField.

(* Centered representative *)
op crepr x = let y = asint x in
  if p %/ 2 <= y then y - p else y.

op "`|_|" x = `|crepr x|.

lemma abs_zp_small (x: int) :
  `|x| < p %/ 2 => `|inzmod x| = `|x|.
proof. smt(inzmodK). qed.

(* Keeping inputs as `int` to allow ranges that go across 0 *)
op dinter_zp i j = dmap (dinter i j) inzmod.

op dball_zp (i: int) = dinter_zp (-i) i.
